#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="zhengguojiang")]
	public partial class SCADADataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDeviceInfo(DeviceInfo instance);
    partial void UpdateDeviceInfo(DeviceInfo instance);
    partial void DeleteDeviceInfo(DeviceInfo instance);
    partial void InsertDeviceAlarm(DeviceAlarm instance);
    partial void UpdateDeviceAlarm(DeviceAlarm instance);
    partial void DeleteDeviceAlarm(DeviceAlarm instance);
    partial void InsertDeviceMaintenancePeople(DeviceMaintenancePeople instance);
    partial void UpdateDeviceMaintenancePeople(DeviceMaintenancePeople instance);
    partial void DeleteDeviceMaintenancePeople(DeviceMaintenancePeople instance);
    partial void InsertDeviceRealTime(DeviceRealTime instance);
    partial void UpdateDeviceRealTime(DeviceRealTime instance);
    partial void DeleteDeviceRealTime(DeviceRealTime instance);
    partial void InsertDeviceTree(DeviceTree instance);
    partial void UpdateDeviceTree(DeviceTree instance);
    partial void DeleteDeviceTree(DeviceTree instance);
    partial void InsertMaintenancePeople(MaintenancePeople instance);
    partial void UpdateMaintenancePeople(MaintenancePeople instance);
    partial void DeleteMaintenancePeople(MaintenancePeople instance);
    partial void InsertStepInfo(StepInfo instance);
    partial void UpdateStepInfo(StepInfo instance);
    partial void DeleteStepInfo(StepInfo instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserEvent(UserEvent instance);
    partial void UpdateUserEvent(UserEvent instance);
    partial void DeleteUserEvent(UserEvent instance);
    partial void InsertUserEventDealDetail(UserEventDealDetail instance);
    partial void UpdateUserEventDealDetail(UserEventDealDetail instance);
    partial void DeleteUserEventDealDetail(UserEventDealDetail instance);
    #endregion
		
		public SCADADataContext() : 
				base(global::DataAccess.Properties.Settings.Default.zhengguojiangConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SCADADataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SCADADataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SCADADataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SCADADataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DeviceInfo> DeviceInfos
		{
			get
			{
				return this.GetTable<DeviceInfo>();
			}
		}
		
		public System.Data.Linq.Table<DatabaseBackUp> DatabaseBackUps
		{
			get
			{
				return this.GetTable<DatabaseBackUp>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<DeviceAlarm> DeviceAlarms
		{
			get
			{
				return this.GetTable<DeviceAlarm>();
			}
		}
		
		public System.Data.Linq.Table<DeviceLog> DeviceLogs
		{
			get
			{
				return this.GetTable<DeviceLog>();
			}
		}
		
		public System.Data.Linq.Table<DeviceMaintenancePeople> DeviceMaintenancePeoples
		{
			get
			{
				return this.GetTable<DeviceMaintenancePeople>();
			}
		}
		
		public System.Data.Linq.Table<DeviceRealTime> DeviceRealTimes
		{
			get
			{
				return this.GetTable<DeviceRealTime>();
			}
		}
		
		public System.Data.Linq.Table<DeviceTree> DeviceTrees
		{
			get
			{
				return this.GetTable<DeviceTree>();
			}
		}
		
		public System.Data.Linq.Table<MaintenancePeople> MaintenancePeoples
		{
			get
			{
				return this.GetTable<MaintenancePeople>();
			}
		}
		
		public System.Data.Linq.Table<Module> Modules
		{
			get
			{
				return this.GetTable<Module>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<RoleModule> RoleModules
		{
			get
			{
				return this.GetTable<RoleModule>();
			}
		}
		
		public System.Data.Linq.Table<StepInfo> StepInfos
		{
			get
			{
				return this.GetTable<StepInfo>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserEvent> UserEvents
		{
			get
			{
				return this.GetTable<UserEvent>();
			}
		}
		
		public System.Data.Linq.Table<UserRole> UserRoles
		{
			get
			{
				return this.GetTable<UserRole>();
			}
		}
		
		public System.Data.Linq.Table<UserEventDealDetail> UserEventDealDetails
		{
			get
			{
				return this.GetTable<UserEventDealDetail>();
			}
		}
		
		public System.Data.Linq.Table<zhenggj> zhenggjs
		{
			get
			{
				return this.GetTable<zhenggj>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeviceInfo")]
	public partial class DeviceInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _DeviceNo;
		
		private string _DeviceSN;
		
		private string _HardType;
		
		private System.Nullable<System.DateTime> _ProductDate;
		
		private string _DeviceMAC;
		
		private string _SIMNo;
		
		private System.Nullable<System.Guid> _ManageAreaID;
		
		private string _InstallPlace;
		
		private System.Nullable<double> _Longitude;
		
		private System.Nullable<double> _Dimensionality;
		
		private System.Nullable<double> _High;
		
		private string _Comment;
		
		private string _ConnectPoint;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Coordinate;
		
		private System.Nullable<int> _ConnectType;
		
		private string _MainDNS;
		
		private string _SecondDNS;
		
		private string _CenterIP;
		
		private string _Domain;
		
		private System.Nullable<int> _port;
		
		private System.Nullable<int> _CollectFreq;
		
		private System.Nullable<int> _ReportInterval;
		
		private System.Nullable<double> _AlarmTop;
		
		private System.Nullable<double> _AlarmDown;
		
		private System.Nullable<double> _Windage;
		
		private string _Version;
		
		private System.Nullable<int> _TimeType;
		
		private string _LCDScreenDisplayType;
		
		private System.Nullable<int> _UseUrgencyButton;
		
		private System.Nullable<int> _Process1Enable;
		
		private System.Nullable<double> _Process1HigherValue;
		
		private System.Nullable<int> _Process1HighValue;
		
		private System.Nullable<double> _Process1LowValue;
		
		private System.Nullable<double> _Process1LowerValue;
		
		private System.Nullable<double> _Process1RateValue;
		
		private System.Nullable<int> _Process2Enable;
		
		private System.Nullable<double> _Process2HigherValue;
		
		private System.Nullable<int> _Process2HighValue;
		
		private System.Nullable<double> _Process2LowValue;
		
		private System.Nullable<double> _Process2LowerValue;
		
		private System.Nullable<double> _Process2RateValue;
		
		private System.Nullable<double> _Process3Enable;
		
		private System.Nullable<double> _Process3HigherValue;
		
		private System.Nullable<int> _Process3HighValue;
		
		private System.Nullable<double> _Process3LowValue;
		
		private System.Nullable<double> _Process3LowerValue;
		
		private System.Nullable<double> _Process3RateValue;
		
		private System.Nullable<double> _Process4Enable;
		
		private System.Nullable<double> _Process4HigherValue;
		
		private System.Nullable<int> _Process4HighValue;
		
		private System.Nullable<double> _Process4LowValue;
		
		private System.Nullable<double> _Process4LowerValue;
		
		private System.Nullable<double> _Process4RateValue;
		
		private System.Nullable<double> _Process5Enable;
		
		private System.Nullable<double> _Process5HigherValue;
		
		private System.Nullable<int> _Process5HighValue;
		
		private System.Nullable<double> _Process5LowValue;
		
		private System.Nullable<double> _Process5LowerValue;
		
		private System.Nullable<double> _Process5RateValue;
		
		private System.Nullable<int> _RealTimeParam;
		
		private System.Nullable<int> _FullTimeParam1;
		
		private System.Nullable<int> _FullTimeParam2;
		
		private System.Nullable<int> _OptimizeParam1;
		
		private System.Nullable<int> _OptimizeParam2;
		
		private System.Nullable<int> _OptimizeParam3;
		
		private System.Nullable<int> _CurrentModel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDeviceNoChanging(string value);
    partial void OnDeviceNoChanged();
    partial void OnDeviceSNChanging(string value);
    partial void OnDeviceSNChanged();
    partial void OnHardTypeChanging(string value);
    partial void OnHardTypeChanged();
    partial void OnProductDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProductDateChanged();
    partial void OnDeviceMACChanging(string value);
    partial void OnDeviceMACChanged();
    partial void OnSIMNoChanging(string value);
    partial void OnSIMNoChanged();
    partial void OnManageAreaIDChanging(System.Nullable<System.Guid> value);
    partial void OnManageAreaIDChanged();
    partial void OnInstallPlaceChanging(string value);
    partial void OnInstallPlaceChanged();
    partial void OnLongitudeChanging(System.Nullable<double> value);
    partial void OnLongitudeChanged();
    partial void OnDimensionalityChanging(System.Nullable<double> value);
    partial void OnDimensionalityChanged();
    partial void OnHighChanging(System.Nullable<double> value);
    partial void OnHighChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnConnectPointChanging(string value);
    partial void OnConnectPointChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCoordinateChanging(string value);
    partial void OnCoordinateChanged();
    partial void OnConnectTypeChanging(System.Nullable<int> value);
    partial void OnConnectTypeChanged();
    partial void OnMainDNSChanging(string value);
    partial void OnMainDNSChanged();
    partial void OnSecondDNSChanging(string value);
    partial void OnSecondDNSChanged();
    partial void OnCenterIPChanging(string value);
    partial void OnCenterIPChanged();
    partial void OnDomainChanging(string value);
    partial void OnDomainChanged();
    partial void OnportChanging(System.Nullable<int> value);
    partial void OnportChanged();
    partial void OnCollectFreqChanging(System.Nullable<int> value);
    partial void OnCollectFreqChanged();
    partial void OnReportIntervalChanging(System.Nullable<int> value);
    partial void OnReportIntervalChanged();
    partial void OnAlarmTopChanging(System.Nullable<double> value);
    partial void OnAlarmTopChanged();
    partial void OnAlarmDownChanging(System.Nullable<double> value);
    partial void OnAlarmDownChanged();
    partial void OnWindageChanging(System.Nullable<double> value);
    partial void OnWindageChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnTimeTypeChanging(System.Nullable<int> value);
    partial void OnTimeTypeChanged();
    partial void OnLCDScreenDisplayTypeChanging(string value);
    partial void OnLCDScreenDisplayTypeChanged();
    partial void OnUseUrgencyButtonChanging(System.Nullable<int> value);
    partial void OnUseUrgencyButtonChanged();
    partial void OnProcess1EnableChanging(System.Nullable<int> value);
    partial void OnProcess1EnableChanged();
    partial void OnProcess1HigherValueChanging(System.Nullable<double> value);
    partial void OnProcess1HigherValueChanged();
    partial void OnProcess1HighValueChanging(System.Nullable<int> value);
    partial void OnProcess1HighValueChanged();
    partial void OnProcess1LowValueChanging(System.Nullable<double> value);
    partial void OnProcess1LowValueChanged();
    partial void OnProcess1LowerValueChanging(System.Nullable<double> value);
    partial void OnProcess1LowerValueChanged();
    partial void OnProcess1RateValueChanging(System.Nullable<double> value);
    partial void OnProcess1RateValueChanged();
    partial void OnProcess2EnableChanging(System.Nullable<int> value);
    partial void OnProcess2EnableChanged();
    partial void OnProcess2HigherValueChanging(System.Nullable<double> value);
    partial void OnProcess2HigherValueChanged();
    partial void OnProcess2HighValueChanging(System.Nullable<int> value);
    partial void OnProcess2HighValueChanged();
    partial void OnProcess2LowValueChanging(System.Nullable<double> value);
    partial void OnProcess2LowValueChanged();
    partial void OnProcess2LowerValueChanging(System.Nullable<double> value);
    partial void OnProcess2LowerValueChanged();
    partial void OnProcess2RateValueChanging(System.Nullable<double> value);
    partial void OnProcess2RateValueChanged();
    partial void OnProcess3EnableChanging(System.Nullable<double> value);
    partial void OnProcess3EnableChanged();
    partial void OnProcess3HigherValueChanging(System.Nullable<double> value);
    partial void OnProcess3HigherValueChanged();
    partial void OnProcess3HighValueChanging(System.Nullable<int> value);
    partial void OnProcess3HighValueChanged();
    partial void OnProcess3LowValueChanging(System.Nullable<double> value);
    partial void OnProcess3LowValueChanged();
    partial void OnProcess3LowerValueChanging(System.Nullable<double> value);
    partial void OnProcess3LowerValueChanged();
    partial void OnProcess3RateValueChanging(System.Nullable<double> value);
    partial void OnProcess3RateValueChanged();
    partial void OnProcess4EnableChanging(System.Nullable<double> value);
    partial void OnProcess4EnableChanged();
    partial void OnProcess4HigherValueChanging(System.Nullable<double> value);
    partial void OnProcess4HigherValueChanged();
    partial void OnProcess4HighValueChanging(System.Nullable<int> value);
    partial void OnProcess4HighValueChanged();
    partial void OnProcess4LowValueChanging(System.Nullable<double> value);
    partial void OnProcess4LowValueChanged();
    partial void OnProcess4LowerValueChanging(System.Nullable<double> value);
    partial void OnProcess4LowerValueChanged();
    partial void OnProcess4RateValueChanging(System.Nullable<double> value);
    partial void OnProcess4RateValueChanged();
    partial void OnProcess5EnableChanging(System.Nullable<double> value);
    partial void OnProcess5EnableChanged();
    partial void OnProcess5HigherValueChanging(System.Nullable<double> value);
    partial void OnProcess5HigherValueChanged();
    partial void OnProcess5HighValueChanging(System.Nullable<int> value);
    partial void OnProcess5HighValueChanged();
    partial void OnProcess5LowValueChanging(System.Nullable<double> value);
    partial void OnProcess5LowValueChanged();
    partial void OnProcess5LowerValueChanging(System.Nullable<double> value);
    partial void OnProcess5LowerValueChanged();
    partial void OnProcess5RateValueChanging(System.Nullable<double> value);
    partial void OnProcess5RateValueChanged();
    partial void OnRealTimeParamChanging(System.Nullable<int> value);
    partial void OnRealTimeParamChanged();
    partial void OnFullTimeParam1Changing(System.Nullable<int> value);
    partial void OnFullTimeParam1Changed();
    partial void OnFullTimeParam2Changing(System.Nullable<int> value);
    partial void OnFullTimeParam2Changed();
    partial void OnOptimizeParam1Changing(System.Nullable<int> value);
    partial void OnOptimizeParam1Changed();
    partial void OnOptimizeParam2Changing(System.Nullable<int> value);
    partial void OnOptimizeParam2Changed();
    partial void OnOptimizeParam3Changing(System.Nullable<int> value);
    partial void OnOptimizeParam3Changed();
    partial void OnCurrentModelChanging(System.Nullable<int> value);
    partial void OnCurrentModelChanged();
    #endregion
		
		public DeviceInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceNo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string DeviceNo
		{
			get
			{
				return this._DeviceNo;
			}
			set
			{
				if ((this._DeviceNo != value))
				{
					this.OnDeviceNoChanging(value);
					this.SendPropertyChanging();
					this._DeviceNo = value;
					this.SendPropertyChanged("DeviceNo");
					this.OnDeviceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceSN", DbType="VarChar(50)")]
		public string DeviceSN
		{
			get
			{
				return this._DeviceSN;
			}
			set
			{
				if ((this._DeviceSN != value))
				{
					this.OnDeviceSNChanging(value);
					this.SendPropertyChanging();
					this._DeviceSN = value;
					this.SendPropertyChanged("DeviceSN");
					this.OnDeviceSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardType", DbType="VarChar(20)")]
		public string HardType
		{
			get
			{
				return this._HardType;
			}
			set
			{
				if ((this._HardType != value))
				{
					this.OnHardTypeChanging(value);
					this.SendPropertyChanging();
					this._HardType = value;
					this.SendPropertyChanged("HardType");
					this.OnHardTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProductDate
		{
			get
			{
				return this._ProductDate;
			}
			set
			{
				if ((this._ProductDate != value))
				{
					this.OnProductDateChanging(value);
					this.SendPropertyChanging();
					this._ProductDate = value;
					this.SendPropertyChanged("ProductDate");
					this.OnProductDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceMAC", DbType="VarChar(20)")]
		public string DeviceMAC
		{
			get
			{
				return this._DeviceMAC;
			}
			set
			{
				if ((this._DeviceMAC != value))
				{
					this.OnDeviceMACChanging(value);
					this.SendPropertyChanging();
					this._DeviceMAC = value;
					this.SendPropertyChanged("DeviceMAC");
					this.OnDeviceMACChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIMNo", DbType="VarChar(20)")]
		public string SIMNo
		{
			get
			{
				return this._SIMNo;
			}
			set
			{
				if ((this._SIMNo != value))
				{
					this.OnSIMNoChanging(value);
					this.SendPropertyChanging();
					this._SIMNo = value;
					this.SendPropertyChanged("SIMNo");
					this.OnSIMNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageAreaID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ManageAreaID
		{
			get
			{
				return this._ManageAreaID;
			}
			set
			{
				if ((this._ManageAreaID != value))
				{
					this.OnManageAreaIDChanging(value);
					this.SendPropertyChanging();
					this._ManageAreaID = value;
					this.SendPropertyChanged("ManageAreaID");
					this.OnManageAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallPlace", DbType="VarChar(20)")]
		public string InstallPlace
		{
			get
			{
				return this._InstallPlace;
			}
			set
			{
				if ((this._InstallPlace != value))
				{
					this.OnInstallPlaceChanging(value);
					this.SendPropertyChanging();
					this._InstallPlace = value;
					this.SendPropertyChanged("InstallPlace");
					this.OnInstallPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float")]
		public System.Nullable<double> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dimensionality", DbType="Float")]
		public System.Nullable<double> Dimensionality
		{
			get
			{
				return this._Dimensionality;
			}
			set
			{
				if ((this._Dimensionality != value))
				{
					this.OnDimensionalityChanging(value);
					this.SendPropertyChanging();
					this._Dimensionality = value;
					this.SendPropertyChanged("Dimensionality");
					this.OnDimensionalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_High", DbType="Float")]
		public System.Nullable<double> High
		{
			get
			{
				return this._High;
			}
			set
			{
				if ((this._High != value))
				{
					this.OnHighChanging(value);
					this.SendPropertyChanging();
					this._High = value;
					this.SendPropertyChanged("High");
					this.OnHighChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(20)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectPoint", DbType="VarChar(20)")]
		public string ConnectPoint
		{
			get
			{
				return this._ConnectPoint;
			}
			set
			{
				if ((this._ConnectPoint != value))
				{
					this.OnConnectPointChanging(value);
					this.SendPropertyChanging();
					this._ConnectPoint = value;
					this.SendPropertyChanged("ConnectPoint");
					this.OnConnectPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(20)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(20)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Coordinate", DbType="VarChar(20)")]
		public string Coordinate
		{
			get
			{
				return this._Coordinate;
			}
			set
			{
				if ((this._Coordinate != value))
				{
					this.OnCoordinateChanging(value);
					this.SendPropertyChanging();
					this._Coordinate = value;
					this.SendPropertyChanged("Coordinate");
					this.OnCoordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectType", DbType="Int")]
		public System.Nullable<int> ConnectType
		{
			get
			{
				return this._ConnectType;
			}
			set
			{
				if ((this._ConnectType != value))
				{
					this.OnConnectTypeChanging(value);
					this.SendPropertyChanging();
					this._ConnectType = value;
					this.SendPropertyChanged("ConnectType");
					this.OnConnectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainDNS", DbType="VarChar(20)")]
		public string MainDNS
		{
			get
			{
				return this._MainDNS;
			}
			set
			{
				if ((this._MainDNS != value))
				{
					this.OnMainDNSChanging(value);
					this.SendPropertyChanging();
					this._MainDNS = value;
					this.SendPropertyChanged("MainDNS");
					this.OnMainDNSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondDNS", DbType="VarChar(20)")]
		public string SecondDNS
		{
			get
			{
				return this._SecondDNS;
			}
			set
			{
				if ((this._SecondDNS != value))
				{
					this.OnSecondDNSChanging(value);
					this.SendPropertyChanging();
					this._SecondDNS = value;
					this.SendPropertyChanged("SecondDNS");
					this.OnSecondDNSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterIP", DbType="VarChar(20)")]
		public string CenterIP
		{
			get
			{
				return this._CenterIP;
			}
			set
			{
				if ((this._CenterIP != value))
				{
					this.OnCenterIPChanging(value);
					this.SendPropertyChanging();
					this._CenterIP = value;
					this.SendPropertyChanged("CenterIP");
					this.OnCenterIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Domain", DbType="VarChar(20)")]
		public string Domain
		{
			get
			{
				return this._Domain;
			}
			set
			{
				if ((this._Domain != value))
				{
					this.OnDomainChanging(value);
					this.SendPropertyChanging();
					this._Domain = value;
					this.SendPropertyChanged("Domain");
					this.OnDomainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_port", DbType="Int")]
		public System.Nullable<int> port
		{
			get
			{
				return this._port;
			}
			set
			{
				if ((this._port != value))
				{
					this.OnportChanging(value);
					this.SendPropertyChanging();
					this._port = value;
					this.SendPropertyChanged("port");
					this.OnportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectFreq", DbType="Int")]
		public System.Nullable<int> CollectFreq
		{
			get
			{
				return this._CollectFreq;
			}
			set
			{
				if ((this._CollectFreq != value))
				{
					this.OnCollectFreqChanging(value);
					this.SendPropertyChanging();
					this._CollectFreq = value;
					this.SendPropertyChanged("CollectFreq");
					this.OnCollectFreqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportInterval", DbType="Int")]
		public System.Nullable<int> ReportInterval
		{
			get
			{
				return this._ReportInterval;
			}
			set
			{
				if ((this._ReportInterval != value))
				{
					this.OnReportIntervalChanging(value);
					this.SendPropertyChanging();
					this._ReportInterval = value;
					this.SendPropertyChanged("ReportInterval");
					this.OnReportIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlarmTop", DbType="Float")]
		public System.Nullable<double> AlarmTop
		{
			get
			{
				return this._AlarmTop;
			}
			set
			{
				if ((this._AlarmTop != value))
				{
					this.OnAlarmTopChanging(value);
					this.SendPropertyChanging();
					this._AlarmTop = value;
					this.SendPropertyChanged("AlarmTop");
					this.OnAlarmTopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlarmDown", DbType="Float")]
		public System.Nullable<double> AlarmDown
		{
			get
			{
				return this._AlarmDown;
			}
			set
			{
				if ((this._AlarmDown != value))
				{
					this.OnAlarmDownChanging(value);
					this.SendPropertyChanging();
					this._AlarmDown = value;
					this.SendPropertyChanged("AlarmDown");
					this.OnAlarmDownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Windage", DbType="Float")]
		public System.Nullable<double> Windage
		{
			get
			{
				return this._Windage;
			}
			set
			{
				if ((this._Windage != value))
				{
					this.OnWindageChanging(value);
					this.SendPropertyChanging();
					this._Windage = value;
					this.SendPropertyChanged("Windage");
					this.OnWindageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="VarChar(10)")]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeType", DbType="Int")]
		public System.Nullable<int> TimeType
		{
			get
			{
				return this._TimeType;
			}
			set
			{
				if ((this._TimeType != value))
				{
					this.OnTimeTypeChanging(value);
					this.SendPropertyChanging();
					this._TimeType = value;
					this.SendPropertyChanged("TimeType");
					this.OnTimeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LCDScreenDisplayType", DbType="VarChar(10)")]
		public string LCDScreenDisplayType
		{
			get
			{
				return this._LCDScreenDisplayType;
			}
			set
			{
				if ((this._LCDScreenDisplayType != value))
				{
					this.OnLCDScreenDisplayTypeChanging(value);
					this.SendPropertyChanging();
					this._LCDScreenDisplayType = value;
					this.SendPropertyChanged("LCDScreenDisplayType");
					this.OnLCDScreenDisplayTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseUrgencyButton", DbType="Int")]
		public System.Nullable<int> UseUrgencyButton
		{
			get
			{
				return this._UseUrgencyButton;
			}
			set
			{
				if ((this._UseUrgencyButton != value))
				{
					this.OnUseUrgencyButtonChanging(value);
					this.SendPropertyChanging();
					this._UseUrgencyButton = value;
					this.SendPropertyChanged("UseUrgencyButton");
					this.OnUseUrgencyButtonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process1Enable", DbType="Int")]
		public System.Nullable<int> Process1Enable
		{
			get
			{
				return this._Process1Enable;
			}
			set
			{
				if ((this._Process1Enable != value))
				{
					this.OnProcess1EnableChanging(value);
					this.SendPropertyChanging();
					this._Process1Enable = value;
					this.SendPropertyChanged("Process1Enable");
					this.OnProcess1EnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process1HigherValue", DbType="Float")]
		public System.Nullable<double> Process1HigherValue
		{
			get
			{
				return this._Process1HigherValue;
			}
			set
			{
				if ((this._Process1HigherValue != value))
				{
					this.OnProcess1HigherValueChanging(value);
					this.SendPropertyChanging();
					this._Process1HigherValue = value;
					this.SendPropertyChanged("Process1HigherValue");
					this.OnProcess1HigherValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process1HighValue", DbType="Int")]
		public System.Nullable<int> Process1HighValue
		{
			get
			{
				return this._Process1HighValue;
			}
			set
			{
				if ((this._Process1HighValue != value))
				{
					this.OnProcess1HighValueChanging(value);
					this.SendPropertyChanging();
					this._Process1HighValue = value;
					this.SendPropertyChanged("Process1HighValue");
					this.OnProcess1HighValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process1LowValue", DbType="Float")]
		public System.Nullable<double> Process1LowValue
		{
			get
			{
				return this._Process1LowValue;
			}
			set
			{
				if ((this._Process1LowValue != value))
				{
					this.OnProcess1LowValueChanging(value);
					this.SendPropertyChanging();
					this._Process1LowValue = value;
					this.SendPropertyChanged("Process1LowValue");
					this.OnProcess1LowValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process1LowerValue", DbType="Float")]
		public System.Nullable<double> Process1LowerValue
		{
			get
			{
				return this._Process1LowerValue;
			}
			set
			{
				if ((this._Process1LowerValue != value))
				{
					this.OnProcess1LowerValueChanging(value);
					this.SendPropertyChanging();
					this._Process1LowerValue = value;
					this.SendPropertyChanged("Process1LowerValue");
					this.OnProcess1LowerValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process1RateValue", DbType="Float")]
		public System.Nullable<double> Process1RateValue
		{
			get
			{
				return this._Process1RateValue;
			}
			set
			{
				if ((this._Process1RateValue != value))
				{
					this.OnProcess1RateValueChanging(value);
					this.SendPropertyChanging();
					this._Process1RateValue = value;
					this.SendPropertyChanged("Process1RateValue");
					this.OnProcess1RateValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process2Enable", DbType="Int")]
		public System.Nullable<int> Process2Enable
		{
			get
			{
				return this._Process2Enable;
			}
			set
			{
				if ((this._Process2Enable != value))
				{
					this.OnProcess2EnableChanging(value);
					this.SendPropertyChanging();
					this._Process2Enable = value;
					this.SendPropertyChanged("Process2Enable");
					this.OnProcess2EnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process2HigherValue", DbType="Float")]
		public System.Nullable<double> Process2HigherValue
		{
			get
			{
				return this._Process2HigherValue;
			}
			set
			{
				if ((this._Process2HigherValue != value))
				{
					this.OnProcess2HigherValueChanging(value);
					this.SendPropertyChanging();
					this._Process2HigherValue = value;
					this.SendPropertyChanged("Process2HigherValue");
					this.OnProcess2HigherValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process2HighValue", DbType="Int")]
		public System.Nullable<int> Process2HighValue
		{
			get
			{
				return this._Process2HighValue;
			}
			set
			{
				if ((this._Process2HighValue != value))
				{
					this.OnProcess2HighValueChanging(value);
					this.SendPropertyChanging();
					this._Process2HighValue = value;
					this.SendPropertyChanged("Process2HighValue");
					this.OnProcess2HighValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process2LowValue", DbType="Float")]
		public System.Nullable<double> Process2LowValue
		{
			get
			{
				return this._Process2LowValue;
			}
			set
			{
				if ((this._Process2LowValue != value))
				{
					this.OnProcess2LowValueChanging(value);
					this.SendPropertyChanging();
					this._Process2LowValue = value;
					this.SendPropertyChanged("Process2LowValue");
					this.OnProcess2LowValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process2LowerValue", DbType="Float")]
		public System.Nullable<double> Process2LowerValue
		{
			get
			{
				return this._Process2LowerValue;
			}
			set
			{
				if ((this._Process2LowerValue != value))
				{
					this.OnProcess2LowerValueChanging(value);
					this.SendPropertyChanging();
					this._Process2LowerValue = value;
					this.SendPropertyChanged("Process2LowerValue");
					this.OnProcess2LowerValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process2RateValue", DbType="Float")]
		public System.Nullable<double> Process2RateValue
		{
			get
			{
				return this._Process2RateValue;
			}
			set
			{
				if ((this._Process2RateValue != value))
				{
					this.OnProcess2RateValueChanging(value);
					this.SendPropertyChanging();
					this._Process2RateValue = value;
					this.SendPropertyChanged("Process2RateValue");
					this.OnProcess2RateValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process3Enable", DbType="Float")]
		public System.Nullable<double> Process3Enable
		{
			get
			{
				return this._Process3Enable;
			}
			set
			{
				if ((this._Process3Enable != value))
				{
					this.OnProcess3EnableChanging(value);
					this.SendPropertyChanging();
					this._Process3Enable = value;
					this.SendPropertyChanged("Process3Enable");
					this.OnProcess3EnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process3HigherValue", DbType="Float")]
		public System.Nullable<double> Process3HigherValue
		{
			get
			{
				return this._Process3HigherValue;
			}
			set
			{
				if ((this._Process3HigherValue != value))
				{
					this.OnProcess3HigherValueChanging(value);
					this.SendPropertyChanging();
					this._Process3HigherValue = value;
					this.SendPropertyChanged("Process3HigherValue");
					this.OnProcess3HigherValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process3HighValue", DbType="Int")]
		public System.Nullable<int> Process3HighValue
		{
			get
			{
				return this._Process3HighValue;
			}
			set
			{
				if ((this._Process3HighValue != value))
				{
					this.OnProcess3HighValueChanging(value);
					this.SendPropertyChanging();
					this._Process3HighValue = value;
					this.SendPropertyChanged("Process3HighValue");
					this.OnProcess3HighValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process3LowValue", DbType="Float")]
		public System.Nullable<double> Process3LowValue
		{
			get
			{
				return this._Process3LowValue;
			}
			set
			{
				if ((this._Process3LowValue != value))
				{
					this.OnProcess3LowValueChanging(value);
					this.SendPropertyChanging();
					this._Process3LowValue = value;
					this.SendPropertyChanged("Process3LowValue");
					this.OnProcess3LowValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process3LowerValue", DbType="Float")]
		public System.Nullable<double> Process3LowerValue
		{
			get
			{
				return this._Process3LowerValue;
			}
			set
			{
				if ((this._Process3LowerValue != value))
				{
					this.OnProcess3LowerValueChanging(value);
					this.SendPropertyChanging();
					this._Process3LowerValue = value;
					this.SendPropertyChanged("Process3LowerValue");
					this.OnProcess3LowerValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process3RateValue", DbType="Float")]
		public System.Nullable<double> Process3RateValue
		{
			get
			{
				return this._Process3RateValue;
			}
			set
			{
				if ((this._Process3RateValue != value))
				{
					this.OnProcess3RateValueChanging(value);
					this.SendPropertyChanging();
					this._Process3RateValue = value;
					this.SendPropertyChanged("Process3RateValue");
					this.OnProcess3RateValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process4Enable", DbType="Float")]
		public System.Nullable<double> Process4Enable
		{
			get
			{
				return this._Process4Enable;
			}
			set
			{
				if ((this._Process4Enable != value))
				{
					this.OnProcess4EnableChanging(value);
					this.SendPropertyChanging();
					this._Process4Enable = value;
					this.SendPropertyChanged("Process4Enable");
					this.OnProcess4EnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process4HigherValue", DbType="Float")]
		public System.Nullable<double> Process4HigherValue
		{
			get
			{
				return this._Process4HigherValue;
			}
			set
			{
				if ((this._Process4HigherValue != value))
				{
					this.OnProcess4HigherValueChanging(value);
					this.SendPropertyChanging();
					this._Process4HigherValue = value;
					this.SendPropertyChanged("Process4HigherValue");
					this.OnProcess4HigherValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process4HighValue", DbType="Int")]
		public System.Nullable<int> Process4HighValue
		{
			get
			{
				return this._Process4HighValue;
			}
			set
			{
				if ((this._Process4HighValue != value))
				{
					this.OnProcess4HighValueChanging(value);
					this.SendPropertyChanging();
					this._Process4HighValue = value;
					this.SendPropertyChanged("Process4HighValue");
					this.OnProcess4HighValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process4LowValue", DbType="Float")]
		public System.Nullable<double> Process4LowValue
		{
			get
			{
				return this._Process4LowValue;
			}
			set
			{
				if ((this._Process4LowValue != value))
				{
					this.OnProcess4LowValueChanging(value);
					this.SendPropertyChanging();
					this._Process4LowValue = value;
					this.SendPropertyChanged("Process4LowValue");
					this.OnProcess4LowValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process4LowerValue", DbType="Float")]
		public System.Nullable<double> Process4LowerValue
		{
			get
			{
				return this._Process4LowerValue;
			}
			set
			{
				if ((this._Process4LowerValue != value))
				{
					this.OnProcess4LowerValueChanging(value);
					this.SendPropertyChanging();
					this._Process4LowerValue = value;
					this.SendPropertyChanged("Process4LowerValue");
					this.OnProcess4LowerValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process4RateValue", DbType="Float")]
		public System.Nullable<double> Process4RateValue
		{
			get
			{
				return this._Process4RateValue;
			}
			set
			{
				if ((this._Process4RateValue != value))
				{
					this.OnProcess4RateValueChanging(value);
					this.SendPropertyChanging();
					this._Process4RateValue = value;
					this.SendPropertyChanged("Process4RateValue");
					this.OnProcess4RateValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process5Enable", DbType="Float")]
		public System.Nullable<double> Process5Enable
		{
			get
			{
				return this._Process5Enable;
			}
			set
			{
				if ((this._Process5Enable != value))
				{
					this.OnProcess5EnableChanging(value);
					this.SendPropertyChanging();
					this._Process5Enable = value;
					this.SendPropertyChanged("Process5Enable");
					this.OnProcess5EnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process5HigherValue", DbType="Float")]
		public System.Nullable<double> Process5HigherValue
		{
			get
			{
				return this._Process5HigherValue;
			}
			set
			{
				if ((this._Process5HigherValue != value))
				{
					this.OnProcess5HigherValueChanging(value);
					this.SendPropertyChanging();
					this._Process5HigherValue = value;
					this.SendPropertyChanged("Process5HigherValue");
					this.OnProcess5HigherValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process5HighValue", DbType="Int")]
		public System.Nullable<int> Process5HighValue
		{
			get
			{
				return this._Process5HighValue;
			}
			set
			{
				if ((this._Process5HighValue != value))
				{
					this.OnProcess5HighValueChanging(value);
					this.SendPropertyChanging();
					this._Process5HighValue = value;
					this.SendPropertyChanged("Process5HighValue");
					this.OnProcess5HighValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process5LowValue", DbType="Float")]
		public System.Nullable<double> Process5LowValue
		{
			get
			{
				return this._Process5LowValue;
			}
			set
			{
				if ((this._Process5LowValue != value))
				{
					this.OnProcess5LowValueChanging(value);
					this.SendPropertyChanging();
					this._Process5LowValue = value;
					this.SendPropertyChanged("Process5LowValue");
					this.OnProcess5LowValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process5LowerValue", DbType="Float")]
		public System.Nullable<double> Process5LowerValue
		{
			get
			{
				return this._Process5LowerValue;
			}
			set
			{
				if ((this._Process5LowerValue != value))
				{
					this.OnProcess5LowerValueChanging(value);
					this.SendPropertyChanging();
					this._Process5LowerValue = value;
					this.SendPropertyChanged("Process5LowerValue");
					this.OnProcess5LowerValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process5RateValue", DbType="Float")]
		public System.Nullable<double> Process5RateValue
		{
			get
			{
				return this._Process5RateValue;
			}
			set
			{
				if ((this._Process5RateValue != value))
				{
					this.OnProcess5RateValueChanging(value);
					this.SendPropertyChanging();
					this._Process5RateValue = value;
					this.SendPropertyChanged("Process5RateValue");
					this.OnProcess5RateValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealTimeParam", DbType="Int")]
		public System.Nullable<int> RealTimeParam
		{
			get
			{
				return this._RealTimeParam;
			}
			set
			{
				if ((this._RealTimeParam != value))
				{
					this.OnRealTimeParamChanging(value);
					this.SendPropertyChanging();
					this._RealTimeParam = value;
					this.SendPropertyChanged("RealTimeParam");
					this.OnRealTimeParamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullTimeParam1", DbType="Int")]
		public System.Nullable<int> FullTimeParam1
		{
			get
			{
				return this._FullTimeParam1;
			}
			set
			{
				if ((this._FullTimeParam1 != value))
				{
					this.OnFullTimeParam1Changing(value);
					this.SendPropertyChanging();
					this._FullTimeParam1 = value;
					this.SendPropertyChanged("FullTimeParam1");
					this.OnFullTimeParam1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullTimeParam2", DbType="Int")]
		public System.Nullable<int> FullTimeParam2
		{
			get
			{
				return this._FullTimeParam2;
			}
			set
			{
				if ((this._FullTimeParam2 != value))
				{
					this.OnFullTimeParam2Changing(value);
					this.SendPropertyChanging();
					this._FullTimeParam2 = value;
					this.SendPropertyChanged("FullTimeParam2");
					this.OnFullTimeParam2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptimizeParam1", DbType="Int")]
		public System.Nullable<int> OptimizeParam1
		{
			get
			{
				return this._OptimizeParam1;
			}
			set
			{
				if ((this._OptimizeParam1 != value))
				{
					this.OnOptimizeParam1Changing(value);
					this.SendPropertyChanging();
					this._OptimizeParam1 = value;
					this.SendPropertyChanged("OptimizeParam1");
					this.OnOptimizeParam1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptimizeParam2", DbType="Int")]
		public System.Nullable<int> OptimizeParam2
		{
			get
			{
				return this._OptimizeParam2;
			}
			set
			{
				if ((this._OptimizeParam2 != value))
				{
					this.OnOptimizeParam2Changing(value);
					this.SendPropertyChanging();
					this._OptimizeParam2 = value;
					this.SendPropertyChanged("OptimizeParam2");
					this.OnOptimizeParam2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptimizeParam3", DbType="Int")]
		public System.Nullable<int> OptimizeParam3
		{
			get
			{
				return this._OptimizeParam3;
			}
			set
			{
				if ((this._OptimizeParam3 != value))
				{
					this.OnOptimizeParam3Changing(value);
					this.SendPropertyChanging();
					this._OptimizeParam3 = value;
					this.SendPropertyChanged("OptimizeParam3");
					this.OnOptimizeParam3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentModel", DbType="Int")]
		public System.Nullable<int> CurrentModel
		{
			get
			{
				return this._CurrentModel;
			}
			set
			{
				if ((this._CurrentModel != value))
				{
					this.OnCurrentModelChanging(value);
					this.SendPropertyChanging();
					this._CurrentModel = value;
					this.SendPropertyChanged("CurrentModel");
					this.OnCurrentModelChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatabaseBackUp")]
	public partial class DatabaseBackUp
	{
		
		private System.Guid _Guid;
		
		private string _DatabaseName;
		
		private System.Nullable<System.DateTime> _BackUpDate;
		
		private System.Nullable<double> _BackUpSize;
		
		private string _BackUpPeople;
		
		private string _Comment;
		
		public DatabaseBackUp()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this._Guid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseName", DbType="VarChar(20)")]
		public string DatabaseName
		{
			get
			{
				return this._DatabaseName;
			}
			set
			{
				if ((this._DatabaseName != value))
				{
					this._DatabaseName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackUpDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BackUpDate
		{
			get
			{
				return this._BackUpDate;
			}
			set
			{
				if ((this._BackUpDate != value))
				{
					this._BackUpDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackUpSize", DbType="Float")]
		public System.Nullable<double> BackUpSize
		{
			get
			{
				return this._BackUpSize;
			}
			set
			{
				if ((this._BackUpSize != value))
				{
					this._BackUpSize = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackUpPeople", DbType="VarChar(20)")]
		public string BackUpPeople
		{
			get
			{
				return this._BackUpPeople;
			}
			set
			{
				if ((this._BackUpPeople != value))
				{
					this._BackUpPeople = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(50)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department
	{
		
		private System.Guid _ID;
		
		private string _DepartmentName;
		
		private System.Nullable<System.Guid> _ParentID;
		
		public Department()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(50)")]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeviceAlarm")]
	public partial class DeviceAlarm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _DeviceID;
		
		private string _DeviceNo;
		
		private System.Nullable<int> _EventType;
		
		private System.Nullable<int> _EventLevel;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private System.Nullable<System.DateTime> _ConfirmTime;
		
		private string _DealStatus;
		
		private string _DealPeople;
		
		private string _Comment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDeviceIDChanging(System.Nullable<System.Guid> value);
    partial void OnDeviceIDChanged();
    partial void OnDeviceNoChanging(string value);
    partial void OnDeviceNoChanged();
    partial void OnEventTypeChanging(System.Nullable<int> value);
    partial void OnEventTypeChanged();
    partial void OnEventLevelChanging(System.Nullable<int> value);
    partial void OnEventLevelChanged();
    partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    partial void OnConfirmTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmTimeChanged();
    partial void OnDealStatusChanging(string value);
    partial void OnDealStatusChanged();
    partial void OnDealPeopleChanging(string value);
    partial void OnDealPeopleChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public DeviceAlarm()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DeviceID
		{
			get
			{
				return this._DeviceID;
			}
			set
			{
				if ((this._DeviceID != value))
				{
					this.OnDeviceIDChanging(value);
					this.SendPropertyChanging();
					this._DeviceID = value;
					this.SendPropertyChanged("DeviceID");
					this.OnDeviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceNo", DbType="VarChar(20)")]
		public string DeviceNo
		{
			get
			{
				return this._DeviceNo;
			}
			set
			{
				if ((this._DeviceNo != value))
				{
					this.OnDeviceNoChanging(value);
					this.SendPropertyChanging();
					this._DeviceNo = value;
					this.SendPropertyChanged("DeviceNo");
					this.OnDeviceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="Int")]
		public System.Nullable<int> EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventLevel", DbType="Int")]
		public System.Nullable<int> EventLevel
		{
			get
			{
				return this._EventLevel;
			}
			set
			{
				if ((this._EventLevel != value))
				{
					this.OnEventLevelChanging(value);
					this.SendPropertyChanging();
					this._EventLevel = value;
					this.SendPropertyChanged("EventLevel");
					this.OnEventLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmTime
		{
			get
			{
				return this._ConfirmTime;
			}
			set
			{
				if ((this._ConfirmTime != value))
				{
					this.OnConfirmTimeChanging(value);
					this.SendPropertyChanging();
					this._ConfirmTime = value;
					this.SendPropertyChanged("ConfirmTime");
					this.OnConfirmTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealStatus", DbType="VarChar(10)")]
		public string DealStatus
		{
			get
			{
				return this._DealStatus;
			}
			set
			{
				if ((this._DealStatus != value))
				{
					this.OnDealStatusChanging(value);
					this.SendPropertyChanging();
					this._DealStatus = value;
					this.SendPropertyChanged("DealStatus");
					this.OnDealStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealPeople", DbType="VarChar(10)")]
		public string DealPeople
		{
			get
			{
				return this._DealPeople;
			}
			set
			{
				if ((this._DealPeople != value))
				{
					this.OnDealPeopleChanging(value);
					this.SendPropertyChanging();
					this._DealPeople = value;
					this.SendPropertyChanged("DealPeople");
					this.OnDealPeopleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(30)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeviceLog")]
	public partial class DeviceLog
	{
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _DeviceID;
		
		private string _DeviceNo;
		
		private string _LogPeople;
		
		private System.Nullable<System.DateTime> _LogTIme;
		
		private string _Comment;
		
		public DeviceLog()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DeviceID
		{
			get
			{
				return this._DeviceID;
			}
			set
			{
				if ((this._DeviceID != value))
				{
					this._DeviceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceNo", DbType="VarChar(20)")]
		public string DeviceNo
		{
			get
			{
				return this._DeviceNo;
			}
			set
			{
				if ((this._DeviceNo != value))
				{
					this._DeviceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogPeople", DbType="VarChar(20)")]
		public string LogPeople
		{
			get
			{
				return this._LogPeople;
			}
			set
			{
				if ((this._LogPeople != value))
				{
					this._LogPeople = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTIme", DbType="DateTime")]
		public System.Nullable<System.DateTime> LogTIme
		{
			get
			{
				return this._LogTIme;
			}
			set
			{
				if ((this._LogTIme != value))
				{
					this._LogTIme = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(50)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeviceMaintenancePeople")]
	public partial class DeviceMaintenancePeople : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _MaintenanceID;
		
		private System.Nullable<System.Guid> _DeviceID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnMaintenanceIDChanging(System.Nullable<System.Guid> value);
    partial void OnMaintenanceIDChanged();
    partial void OnDeviceIDChanging(System.Nullable<System.Guid> value);
    partial void OnDeviceIDChanged();
    #endregion
		
		public DeviceMaintenancePeople()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintenanceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MaintenanceID
		{
			get
			{
				return this._MaintenanceID;
			}
			set
			{
				if ((this._MaintenanceID != value))
				{
					this.OnMaintenanceIDChanging(value);
					this.SendPropertyChanging();
					this._MaintenanceID = value;
					this.SendPropertyChanged("MaintenanceID");
					this.OnMaintenanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DeviceID
		{
			get
			{
				return this._DeviceID;
			}
			set
			{
				if ((this._DeviceID != value))
				{
					this.OnDeviceIDChanging(value);
					this.SendPropertyChanging();
					this._DeviceID = value;
					this.SendPropertyChanged("DeviceID");
					this.OnDeviceIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeviceRealTime")]
	public partial class DeviceRealTime : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _DeviceID;
		
		private string _DeviceNo;
		
		private System.Nullable<double> _Temperature;
		
		private System.Nullable<int> _Electricity;
		
		private System.Nullable<int> _Signal;
		
		private System.Nullable<double> _Process4Value;
		
		private System.Nullable<double> _Process5Value;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDeviceIDChanging(System.Guid value);
    partial void OnDeviceIDChanged();
    partial void OnDeviceNoChanging(string value);
    partial void OnDeviceNoChanged();
    partial void OnTemperatureChanging(System.Nullable<double> value);
    partial void OnTemperatureChanged();
    partial void OnElectricityChanging(System.Nullable<int> value);
    partial void OnElectricityChanged();
    partial void OnSignalChanging(System.Nullable<int> value);
    partial void OnSignalChanged();
    partial void OnProcess4ValueChanging(System.Nullable<double> value);
    partial void OnProcess4ValueChanged();
    partial void OnProcess5ValueChanging(System.Nullable<double> value);
    partial void OnProcess5ValueChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnUpdateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateTimeChanged();
    #endregion
		
		public DeviceRealTime()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DeviceID
		{
			get
			{
				return this._DeviceID;
			}
			set
			{
				if ((this._DeviceID != value))
				{
					this.OnDeviceIDChanging(value);
					this.SendPropertyChanging();
					this._DeviceID = value;
					this.SendPropertyChanged("DeviceID");
					this.OnDeviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceNo", DbType="VarChar(20)")]
		public string DeviceNo
		{
			get
			{
				return this._DeviceNo;
			}
			set
			{
				if ((this._DeviceNo != value))
				{
					this.OnDeviceNoChanging(value);
					this.SendPropertyChanging();
					this._DeviceNo = value;
					this.SendPropertyChanged("DeviceNo");
					this.OnDeviceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Temperature", DbType="Float")]
		public System.Nullable<double> Temperature
		{
			get
			{
				return this._Temperature;
			}
			set
			{
				if ((this._Temperature != value))
				{
					this.OnTemperatureChanging(value);
					this.SendPropertyChanging();
					this._Temperature = value;
					this.SendPropertyChanged("Temperature");
					this.OnTemperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Electricity", DbType="Int")]
		public System.Nullable<int> Electricity
		{
			get
			{
				return this._Electricity;
			}
			set
			{
				if ((this._Electricity != value))
				{
					this.OnElectricityChanging(value);
					this.SendPropertyChanging();
					this._Electricity = value;
					this.SendPropertyChanged("Electricity");
					this.OnElectricityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Signal", DbType="Int")]
		public System.Nullable<int> Signal
		{
			get
			{
				return this._Signal;
			}
			set
			{
				if ((this._Signal != value))
				{
					this.OnSignalChanging(value);
					this.SendPropertyChanging();
					this._Signal = value;
					this.SendPropertyChanged("Signal");
					this.OnSignalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process4Value", DbType="Float")]
		public System.Nullable<double> Process4Value
		{
			get
			{
				return this._Process4Value;
			}
			set
			{
				if ((this._Process4Value != value))
				{
					this.OnProcess4ValueChanging(value);
					this.SendPropertyChanging();
					this._Process4Value = value;
					this.SendPropertyChanged("Process4Value");
					this.OnProcess4ValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process5Value", DbType="Float")]
		public System.Nullable<double> Process5Value
		{
			get
			{
				return this._Process5Value;
			}
			set
			{
				if ((this._Process5Value != value))
				{
					this.OnProcess5ValueChanging(value);
					this.SendPropertyChanging();
					this._Process5Value = value;
					this.SendPropertyChanged("Process5Value");
					this.OnProcess5ValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeviceTree")]
	public partial class DeviceTree : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Name;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private System.Nullable<System.Guid> _AdminID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnAdminIDChanging(System.Nullable<System.Guid> value);
    partial void OnAdminIDChanged();
    #endregion
		
		public DeviceTree()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(20)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MaintenancePeople")]
	public partial class MaintenancePeople : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _MainNo;
		
		private string _MainName;
		
		private string _City;
		
		private string _Native;
		
		private string _Telephone;
		
		private string _MobileBack;
		
		private string _Email;
		
		private string _Column_9;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnMainNoChanging(string value);
    partial void OnMainNoChanged();
    partial void OnMainNameChanging(string value);
    partial void OnMainNameChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnNativeChanging(string value);
    partial void OnNativeChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnMobileBackChanging(string value);
    partial void OnMobileBackChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnColumn_9Changing(string value);
    partial void OnColumn_9Changed();
    #endregion
		
		public MaintenancePeople()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainNo", DbType="VarChar(20)")]
		public string MainNo
		{
			get
			{
				return this._MainNo;
			}
			set
			{
				if ((this._MainNo != value))
				{
					this.OnMainNoChanging(value);
					this.SendPropertyChanging();
					this._MainNo = value;
					this.SendPropertyChanged("MainNo");
					this.OnMainNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainName", DbType="VarChar(20)")]
		public string MainName
		{
			get
			{
				return this._MainName;
			}
			set
			{
				if ((this._MainName != value))
				{
					this.OnMainNameChanging(value);
					this.SendPropertyChanging();
					this._MainName = value;
					this.SendPropertyChanged("MainName");
					this.OnMainNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(20)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Native", DbType="VarChar(50)")]
		public string Native
		{
			get
			{
				return this._Native;
			}
			set
			{
				if ((this._Native != value))
				{
					this.OnNativeChanging(value);
					this.SendPropertyChanging();
					this._Native = value;
					this.SendPropertyChanged("Native");
					this.OnNativeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(20)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileBack", DbType="VarChar(20)")]
		public string MobileBack
		{
			get
			{
				return this._MobileBack;
			}
			set
			{
				if ((this._MobileBack != value))
				{
					this.OnMobileBackChanging(value);
					this.SendPropertyChanging();
					this._MobileBack = value;
					this.SendPropertyChanged("MobileBack");
					this.OnMobileBackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Column_9", DbType="Char(10)")]
		public string Column_9
		{
			get
			{
				return this._Column_9;
			}
			set
			{
				if ((this._Column_9 != value))
				{
					this.OnColumn_9Changing(value);
					this.SendPropertyChanging();
					this._Column_9 = value;
					this.SendPropertyChanged("Column_9");
					this.OnColumn_9Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Module")]
	public partial class Module
	{
		
		private System.Guid _ModuleID;
		
		private string _ModuleName;
		
		public Module()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					this._ModuleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleName", DbType="VarChar(50)")]
		public string ModuleName
		{
			get
			{
				return this._ModuleName;
			}
			set
			{
				if ((this._ModuleName != value))
				{
					this._ModuleName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role
	{
		
		private System.Guid _RoleID;
		
		private string _RoleName;
		
		public Role()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(50)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleModule")]
	public partial class RoleModule
	{
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _RoleID;
		
		private System.Nullable<System.Guid> _ModuleID;
		
		public RoleModule()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					this._ModuleID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StepInfo")]
	public partial class StepInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _StepName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnStepNameChanging(string value);
    partial void OnStepNameChanged();
    #endregion
		
		public StepInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StepName", DbType="NVarChar(1024)")]
		public string StepName
		{
			get
			{
				return this._StepName;
			}
			set
			{
				if ((this._StepName != value))
				{
					this.OnStepNameChanging(value);
					this.SendPropertyChanging();
					this._StepName = value;
					this.SendPropertyChanged("StepName");
					this.OnStepNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserID;
		
		private string _LoginID;
		
		private string _UserName;
		
		private System.Nullable<System.Guid> _DeptID;
		
		private string _Password;
		
		private EntitySet<UserEventDealDetail> _UserEventDealDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnLoginIDChanging(string value);
    partial void OnLoginIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnDeptIDChanging(System.Nullable<System.Guid> value);
    partial void OnDeptIDChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public User()
		{
			this._UserEventDealDetails = new EntitySet<UserEventDealDetail>(new Action<UserEventDealDetail>(this.attach_UserEventDealDetails), new Action<UserEventDealDetail>(this.detach_UserEventDealDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="VarChar(20)")]
		public string LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(20)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DeptID
		{
			get
			{
				return this._DeptID;
			}
			set
			{
				if ((this._DeptID != value))
				{
					this.OnDeptIDChanging(value);
					this.SendPropertyChanging();
					this._DeptID = value;
					this.SendPropertyChanged("DeptID");
					this.OnDeptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(20)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserEventDealDetail", Storage="_UserEventDealDetails", ThisKey="UserID", OtherKey="OperatorId")]
		public EntitySet<UserEventDealDetail> UserEventDealDetails
		{
			get
			{
				return this._UserEventDealDetails;
			}
			set
			{
				this._UserEventDealDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserEventDealDetails(UserEventDealDetail entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserEventDealDetails(UserEventDealDetail entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserEvent")]
	public partial class UserEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _EventNo;
		
		private System.Guid _DeviceID;
		
		private string _DeviceNo;
		
		private System.Nullable<int> _State;
		
		private System.Nullable<int> _Count;
		
		private System.Nullable<System.DateTime> _RequestTime;
		
		private EntitySet<UserEventDealDetail> _UserEventDealDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnEventNoChanging(string value);
    partial void OnEventNoChanged();
    partial void OnDeviceIDChanging(System.Guid value);
    partial void OnDeviceIDChanged();
    partial void OnDeviceNoChanging(string value);
    partial void OnDeviceNoChanged();
    partial void OnStateChanging(System.Nullable<int> value);
    partial void OnStateChanged();
    partial void OnCountChanging(System.Nullable<int> value);
    partial void OnCountChanged();
    partial void OnRequestTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestTimeChanged();
    #endregion
		
		public UserEvent()
		{
			this._UserEventDealDetails = new EntitySet<UserEventDealDetail>(new Action<UserEventDealDetail>(this.attach_UserEventDealDetails), new Action<UserEventDealDetail>(this.detach_UserEventDealDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string EventNo
		{
			get
			{
				return this._EventNo;
			}
			set
			{
				if ((this._EventNo != value))
				{
					this.OnEventNoChanging(value);
					this.SendPropertyChanging();
					this._EventNo = value;
					this.SendPropertyChanged("EventNo");
					this.OnEventNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DeviceID
		{
			get
			{
				return this._DeviceID;
			}
			set
			{
				if ((this._DeviceID != value))
				{
					this.OnDeviceIDChanging(value);
					this.SendPropertyChanging();
					this._DeviceID = value;
					this.SendPropertyChanged("DeviceID");
					this.OnDeviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string DeviceNo
		{
			get
			{
				return this._DeviceNo;
			}
			set
			{
				if ((this._DeviceNo != value))
				{
					this.OnDeviceNoChanging(value);
					this.SendPropertyChanging();
					this._DeviceNo = value;
					this.SendPropertyChanged("DeviceNo");
					this.OnDeviceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int")]
		public System.Nullable<int> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestTime
		{
			get
			{
				return this._RequestTime;
			}
			set
			{
				if ((this._RequestTime != value))
				{
					this.OnRequestTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestTime = value;
					this.SendPropertyChanged("RequestTime");
					this.OnRequestTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserEvent_UserEventDealDetail", Storage="_UserEventDealDetails", ThisKey="ID", OtherKey="EventID")]
		public EntitySet<UserEventDealDetail> UserEventDealDetails
		{
			get
			{
				return this._UserEventDealDetails;
			}
			set
			{
				this._UserEventDealDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserEventDealDetails(UserEventDealDetail entity)
		{
			this.SendPropertyChanging();
			entity.UserEvent = this;
		}
		
		private void detach_UserEventDealDetails(UserEventDealDetail entity)
		{
			this.SendPropertyChanging();
			entity.UserEvent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRole")]
	public partial class UserRole
	{
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _UserID;
		
		private System.Nullable<System.Guid> _RoleID;
		
		public UserRole()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserEventDealDetail")]
	public partial class UserEventDealDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _EventID;
		
		private System.Nullable<System.Guid> _OperatorId;
		
		private System.Nullable<int> _StepNo;
		
		private string _StepName;
		
		private string _Memo;
		
		private System.Nullable<System.DateTime> _DealTime;
		
		private EntityRef<User> _User;
		
		private EntityRef<UserEvent> _UserEvent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnEventIDChanging(System.Nullable<System.Guid> value);
    partial void OnEventIDChanged();
    partial void OnOperatorIdChanging(System.Nullable<System.Guid> value);
    partial void OnOperatorIdChanged();
    partial void OnStepNoChanging(System.Nullable<int> value);
    partial void OnStepNoChanged();
    partial void OnStepNameChanging(string value);
    partial void OnStepNameChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    partial void OnDealTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDealTimeChanged();
    #endregion
		
		public UserEventDealDetail()
		{
			this._User = default(EntityRef<User>);
			this._UserEvent = default(EntityRef<UserEvent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					if (this._UserEvent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OperatorId
		{
			get
			{
				return this._OperatorId;
			}
			set
			{
				if ((this._OperatorId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._OperatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StepNo", DbType="Int")]
		public System.Nullable<int> StepNo
		{
			get
			{
				return this._StepNo;
			}
			set
			{
				if ((this._StepNo != value))
				{
					this.OnStepNoChanging(value);
					this.SendPropertyChanging();
					this._StepNo = value;
					this.SendPropertyChanged("StepNo");
					this.OnStepNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StepName", DbType="NVarChar(1024)")]
		public string StepName
		{
			get
			{
				return this._StepName;
			}
			set
			{
				if ((this._StepName != value))
				{
					this.OnStepNameChanging(value);
					this.SendPropertyChanging();
					this._StepName = value;
					this.SendPropertyChanged("StepName");
					this.OnStepNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(1024)")]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this.OnMemoChanging(value);
					this.SendPropertyChanging();
					this._Memo = value;
					this.SendPropertyChanged("Memo");
					this.OnMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DealTime
		{
			get
			{
				return this._DealTime;
			}
			set
			{
				if ((this._DealTime != value))
				{
					this.OnDealTimeChanging(value);
					this.SendPropertyChanging();
					this._DealTime = value;
					this.SendPropertyChanged("DealTime");
					this.OnDealTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserEventDealDetail", Storage="_User", ThisKey="OperatorId", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserEventDealDetails.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserEventDealDetails.Add(this);
						this._OperatorId = value.UserID;
					}
					else
					{
						this._OperatorId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserEvent_UserEventDealDetail", Storage="_UserEvent", ThisKey="EventID", OtherKey="ID", IsForeignKey=true)]
		public UserEvent UserEvent
		{
			get
			{
				return this._UserEvent.Entity;
			}
			set
			{
				UserEvent previousValue = this._UserEvent.Entity;
				if (((previousValue != value) 
							|| (this._UserEvent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserEvent.Entity = null;
						previousValue.UserEventDealDetails.Remove(this);
					}
					this._UserEvent.Entity = value;
					if ((value != null))
					{
						value.UserEventDealDetails.Add(this);
						this._EventID = value.ID;
					}
					else
					{
						this._EventID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("UserEvent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zhenggj")]
	public partial class zhenggj
	{
		
		private System.Nullable<int> _AAA;
		
		private System.Nullable<System.DateTime> _BBB;
		
		private System.Nullable<int> _CCC;
		
		public zhenggj()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AAA", DbType="Int")]
		public System.Nullable<int> AAA
		{
			get
			{
				return this._AAA;
			}
			set
			{
				if ((this._AAA != value))
				{
					this._AAA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BBB", DbType="Date")]
		public System.Nullable<System.DateTime> BBB
		{
			get
			{
				return this._BBB;
			}
			set
			{
				if ((this._BBB != value))
				{
					this._BBB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCC", DbType="Int")]
		public System.Nullable<int> CCC
		{
			get
			{
				return this._CCC;
			}
			set
			{
				if ((this._CCC != value))
				{
					this._CCC = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
